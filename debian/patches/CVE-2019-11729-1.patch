Backport of:

# HG changeset patch
# User Martin Thomson <mt@lowentropy.net>
# Date 1560498951 0
# Node ID dabfe1160c682b4d1d19c5a7a13ab3828bb9d37f
# Parent  6cfb54d262d030783137aa6478b45ecb3cbfc624
Bug 1515342 - More thorough input checking, r=jcj

All part of applying better discipline throughout.

Differential Revision: https://phabricator.services.mozilla.com/D33736

Index: nss-3.28.4/nss/lib/cryptohi/seckey.c
===================================================================
--- nss-3.28.4.orig/nss/lib/cryptohi/seckey.c	2019-07-12 08:21:13.998258367 -0400
+++ nss-3.28.4/nss/lib/cryptohi/seckey.c	2019-07-12 08:21:13.998258367 -0400
@@ -641,6 +641,11 @@ seckey_ExtractPublicKey(const CERTSubjec
                     return pubk;
                 break;
             case SEC_OID_ANSIX962_EC_PUBLIC_KEY:
+                /* A basic sanity check on inputs. */
+                if (spki->algorithm.parameters.len == 0 || newOs.len == 0) {
+                    PORT_SetError(SEC_ERROR_INPUT_LEN);
+                    break;
+                }
                 pubk->keyType = ecKey;
                 pubk->u.ec.size = 0;
 
Index: nss-3.28.4/nss/lib/freebl/dh.c
===================================================================
--- nss-3.28.4.orig/nss/lib/freebl/dh.c	2019-07-12 08:21:13.998258367 -0400
+++ nss-3.28.4/nss/lib/freebl/dh.c	2019-07-12 08:21:13.998258367 -0400
@@ -212,7 +212,8 @@ DH_Derive(SECItem *publicValue,
     unsigned int len = 0;
     unsigned int nb;
     unsigned char *secret = NULL;
-    if (!publicValue || !prime || !privateValue || !derivedSecret) {
+    if (!publicValue || !publicValue->len || !prime || !prime->len ||
+        !privateValue || !privateValue->len || !derivedSecret) {
         PORT_SetError(SEC_ERROR_INVALID_ARGS);
         return SECFailure;
     }
Index: nss-3.28.4/nss/lib/freebl/ec.c
===================================================================
--- nss-3.28.4.orig/nss/lib/freebl/ec.c	2019-07-12 08:21:13.998258367 -0400
+++ nss-3.28.4/nss/lib/freebl/ec.c	2019-07-12 08:22:11.266540967 -0400
@@ -206,8 +206,8 @@ ec_NewKey(ECParams *ecParams, ECPrivateK
 #endif
     MP_DIGITS(&k) = 0;
 
-    if (!ecParams || !privKey || !privKeyBytes || (privKeyLen < 0) ||
-        !ecParams->name) {
+    if (!ecParams || ecParams->name == ECCurve_noName ||
+        !privKey || !privKeyBytes || privKeyLen <= 0) {
         PORT_SetError(SEC_ERROR_INVALID_ARGS);
         return SECFailure;
     }
@@ -448,7 +448,8 @@ EC_ValidatePublicKey(ECParams *ecParams,
     mp_err err = MP_OKAY;
     int len;
 
-    if (!ecParams || !publicValue || !ecParams->name) {
+    if (!ecParams || ecParams->name == ECCurve_noName ||
+        !publicValue || !publicValue->len) {
         PORT_SetError(SEC_ERROR_INVALID_ARGS);
         return SECFailure;
     }
@@ -559,8 +560,9 @@ ECDH_Derive(SECItem *publicValue,
     int i;
 #endif
 
-    if (!publicValue || !ecParams || !privateValue || !derivedSecret ||
-        !ecParams->name) {
+    if (!publicValue || !publicValue->len ||
+        !ecParams || ecParams->name == ECCurve_noName ||
+        !privateValue || !privateValue->len || !derivedSecret) {
         PORT_SetError(SEC_ERROR_INVALID_ARGS);
         return SECFailure;
     }
Index: nss-3.28.4/nss/lib/util/quickder.c
===================================================================
--- nss-3.28.4.orig/nss/lib/util/quickder.c	2019-07-12 08:21:13.998258367 -0400
+++ nss-3.28.4/nss/lib/util/quickder.c	2019-07-12 08:21:13.998258367 -0400
@@ -754,6 +754,13 @@ DecodeItem(void* dest,
                         }
 
                         case SEC_ASN1_BIT_STRING: {
+                            /* Can't be 8 or more spare bits, or any spare bits
+			     * if there are no octets. */
+                            if (temp.data[0] >= 8 || (temp.data[0] > 0 && temp.len == 1)) {
+                                PORT_SetError(SEC_ERROR_BAD_DER);
+                                rv = SECFailure;
+                                break;
+                            }
                             /* change the length in the SECItem to be the number
                                of bits */
                             temp.len = (temp.len - 1) * 8 - (temp.data[0] & 0x7);
